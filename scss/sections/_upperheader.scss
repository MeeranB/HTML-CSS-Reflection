@use '../custom' as *;

.search-bar-container {
    width: 303px;
    height: 56px;
    input {
        height: 100%;
    }
    @media (max-width: map-get($grid-breakpoints, "xl")) {
        justify-content: center;
        width: auto;
    }
}

.header-navbar {
    height: 110px;
    padding-top: 20px;
    padding-bottom: 20px;
}

.actions {
    @media (max-width: map-get($grid-breakpoints, "sm" )) {
        width: 120px;
        padding-left: 0;
        margin-left: 15px;
    }
}

.navbar-brand {
    @media (max-width: map-get($grid-breakpoints, "md" )) {
        flex: initial;
    }
    padding: 0;
    margin-right: 0px;
    //TODO: fix smallest viewports to have a responsive logo and fixed margins
    .logo {
        @media (max-width: map-get($grid-breakpoints, "sm" )) {
            @include img-fluid;
        }
        @media (min-width: map-get($grid-breakpoints, "sm" )) {
            width: 402px;
        }
        @media (min-width: map-get($grid-breakpoints, "md" )) {
            width: 345px;
            height: 60.06px;
            margin-left: 15px;
            margin-bottom: 10px;
        }

        @media (min-width: map-get($grid-breakpoints, "lg")) {
            width: 374.16px;
            height: 65.14px;
        }
        @media (min-width: map-get($grid-breakpoints, "xl" )) {
            width: 370px;
            height: 64.2px;
        }
    }
}

#search-field {
    //between extra large and medium screensizes
    @media (min-width: map-get($grid-breakpoints, "lg")) and (max-width: map-get($grid-breakpoints, "xl")) {
        display: none;
    }
}

 #uhead-container {
    @media (max-width: map-get($grid-breakpoints, "md" )) {
        padding-left: 0;
    }
 }

 .row {
    @media (max-width: map-get($grid-breakpoints, "md" )) {
        margin-left: 0;
        height: 70px;
    }
 }

//  @media (max-width: map-get($grid-breakpoints, "md" )) {
//      #uhead-container {
//          padding-left: 0;
//      }
//      .row {
//          height: 70px;
//      }
//  }
//  @media (min-width: map-get($grid-breakpoints, "sm" )) {
//      //This rule allows the row to fit into the container while ignoring the containers' padding
//      .row {
//          margin-left: 0px;
//          margin-right: 0px;
//      }
//  }

